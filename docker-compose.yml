version: "3"

services:
  backend:
    build:
      context: .
      dockerfile: DOCKERFILE
    image: ducatus_exchange_backend-image
    container_name: ducatus_exchange_backend
    hostname: ducatus_exchange_backend
    restart: always
    expose:
      - 8080
    ports:
      - 0.0.0.0:8080:8080
    command: >
      sh -c "python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py runserver 0.0.0.0:8080"
    stdin_open: true
    tty: true
    depends_on:
      - db
      - rabbit
    networks:
      - main
    volumes:
      - .:/www
    links:
      - db

  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5682:5672"
      - "15682:15672"
    networks:
      - main

  celery:
    build:
      context: .
      dockerfile: DOCKERFILE
    restart: always
    command: >
      sh -c "./wait-for rabbit:5672 &&
             celery -A ducatus_exchange worker -B --loglevel=info"
    depends_on:
      - backend
      - rabbit
      - db
    networks:
      - main
    links:
      - rabbit

  celery-beat:
    build:
      context: .
      dockerfile: DOCKERFILE
    restart: always
    command: >
      sh -c "./wait-for rabbit:5672 &&
             celery -A ducatus_exchange beat -l info"
    depends_on:
      - backend
      - rabbit
      - db
      - celery
    networks:
      - main
    links:
      - rabbit

  db:
    image: postgres:13-alpine
    container_name: db
    hostname: db
    environment:
      - POSTGRES_DB=ducatus_exchange
      - POSTGRES_USER=ducatus_exchange
      - POSTGRES_PASSWORD=ducatus_exchange
    ports:
      - "5432:5432"
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - main

networks:
  main:
    driver: bridge

volumes:
  postgresql-data: