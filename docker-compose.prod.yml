version: "3"

services:
  backend:
    build:
      context: .
      dockerfile: DOCKERFILE.prod
    image: ducatus_exchange_backend-image
    container_name: ducatus_exchange_backend
    hostname: ducatus_exchange_backend
    restart: on-failure
    expose:
      - 8000
    ports:
      - 8000:8000
    volumes:
      - .:/www/ducatus_exchange_backend
      - static_volume:/www/staticfiles
      - media_volume:/www/mediafiles
    command: gunicorn ducatus_exchange.wsgi:application --bind 0.0.0.0:8000
    stdin_open: true
    tty: true
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - rabbit
    links:
      - db

  nginx:
    build:
      context: ./nginx
      dockerfile: DOCKERFILE
    container_name: nginx
    ports:
      - 1337:80
    depends_on:
      - backend
    volumes:
      - static_volume:/www/staticfiles
      - media_volume:/www/mediafiles

  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    hostname: rabbit
    restart: unless-stopped
    env_file:
      - ./.env.prod
    ports:
      - 5682:5672
      - 15682:15672

  celery:
    build:
      context: .
      dockerfile: DOCKERFILE.prod
    container_name: celery-worker
    restart: unless-stopped
    command: >
      sh -c "./wait-for rabbit:5672 &&
           celery -A ducatus_exchange worker -B -l info
           --logfile=/var/log/celery/celeryworker-shhh.log
           --pidfile=/var/run/celery/celeryworker-shhh.pid"
    depends_on:
      - backend
      - rabbit
      - db
    links:
      - rabbit

  celery-beat:
    build:
      context: .
      dockerfile: DOCKERFILE.prod
    container_name: celery-beat
    restart: unless-stopped
    command: >
      sh -c "./wait-for rabbit:5672 &&
             celery -A ducatus_exchange beat -l info
             --logfile=/var/log/celery/celerybeat-shhh.log
             --pidfile=/var/run/celery/celerybeat-shhh.pid
            --schedule=/var/run/celery/celerybeat-schedule"
    depends_on:
      - backend
      - rabbit
      - db
      - celery
    links:
      - rabbit

  voucher_withdraw_checker:
    env_file: ./.env.prod
    build:
      context: .
      dockerfile: dockerfiles/voucher_withdraw_checker.Dockerfile
    container_name: voucher_withdraw_checker
    restart: unless-stopped

  voucher_inputs_checker:
    env_file: ./.env.prod
    build:
      context: .
      dockerfile: dockerfiles/voucher_inputs_checker.Dockerfile
    container_name: voucher_inputs_checker
    restart: unless-stopped

  ducex_receiver:
    env_file: ./.env.prod
    build:
      context: .
      dockerfile: dockerfiles/ducex_receiver.Dockerfile
    container_name: ducex_receiver
    restart: unless-stopped

  ducex_lottery_checker:
    env_file: ./.env.prod
    build:
      context: .
      dockerfile: dockerfiles/ducex_lottery_checker.Dockerfile
    container_name: duce_lottery_checker
    restart: unless-stopped

  ducex_rates_checker:
    env_file: ./.env.prod
    build:
      context: .
      dockerfile: dockerfiles/ducex_rates_checker.Dockerfile
    container_name: ducex_rates_checker
    restart: unless-stopped

  ducex_stats_checker:
    env_file: ./.env.prod
    build:
      context: .
      dockerfile: dockerfiles/ducex_stats_checker.Dockerfile
    container_name: ducex_stats_checker
    restart: unless-stopped
  scanner:
    env_file: ./.env.prod
    build:
      context: .
      dockerfile: dockerfiles/scanner.Dockerfile
    depends_on:
      - db
      - rabbit
    restart: unless-stopped
    networks:
      centurion-net:
    volumes:
      - ./scanner/settings:/app/mywill_scanner/settings
  db:
    image: postgres
    container_name: potgres_db
    hostname: db
    ports:
      - 5432:5432
    env_file:
      - ./.env.prod
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgresql-data:
  static_volume:
  media_volume: